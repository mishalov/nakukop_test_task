Get data from the data.json file and display it on the page as shown in the pic. "example.png".

The parameters shown in the figure are located in the Goods node. "C" - the price in dollars (USD) - display in rubles (the rate can be chosen arbitrarily), "G" - the group id, "T" - the product id, "P" - how many units of the product are left (the parameter that is indicated in brackets in title).

Mappings of group ids and products with their names are located in the names.json file.

After displaying the data, apply handlers to add the selected product to the cart and remove it from it. An example of a cart is shown in the "cart.png" file. Calculate the total amount of goods and display it in a separate field.
The cart is on the same page along with the list of products.

(*)
Display data using a binding to the view and the possibility of subsequent changes (two-way binding). Frameworks can be used.
Update the price of an item depending on the exchange rate.
With an interval of 15 seconds, read the original data.json file and simultaneously change the dollar rate (manually) to a value from 20 to 80, updating the data in the model (with a change in the view). If the price has increased upwards - highlight the cell in red, if downwards - in green.

Additional Information: The design shown in the examples does not have to be followed. Comment on the main actions. Interesting solutions are welcome.